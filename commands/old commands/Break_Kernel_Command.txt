https://mirrors.edge.kernel.org/fedora/releases/38/Everything/source/tree/Packages/

chroot newroot /bin/bash

set +h

umask 022

export LJOS=/lj-os

export LC_ALL=POSIX
export PATH=${LJOS}/cross-tools/bin:/bin:/usr/bin



cat > ${LJOS}/etc/group << "EOF"
root:x:0:
bin:x:1:
sys:x:2:
kmem:x:3:
tty:x:4:
daemon:x:6:
disk:x:8:
dialout:x:10:
video:x:12:
utmp:x:13:
usb:x:14:
EOF

cat > ${LJOS}/etc/fstab << "EOF"
# file system  mount-point  type   options          dump  fsck
#                                                         order

rootfs          /               auto    defaults        1      1
proc            /proc           proc    defaults        0      0
sysfs           /sys            sysfs   defaults        0      0
devpts          /dev/pts        devpts  gid=4,mode=620  0      0
tmpfs           /dev/shm        tmpfs   defaults        0      0
EOF

cat > ${LJOS}/etc/profile << "EOF"
export PATH=/bin:/usr/bin

if [ `id -u` -eq 0 ] ; then
        PATH=/bin:/sbin:/usr/bin:/usr/sbin
        unset HISTFILE
fi


# Set up some environment variables.
export USER=`id -un`
export LOGNAME=$USER
export HOSTNAME=`/bin/hostname`
export HISTSIZE=1000
export HISTFILESIZE=1000
export PAGER='/bin/more '
export EDITOR='/bin/vi'
EOF

echo "ljos-test" > ${LJOS}/etc/HOSTNAME

cat > ${LJOS}/etc/issue<< "EOF"
Linux Journal OS 0.1a
Kernel \r on an \m

EOF

cat > ${LJOS}/etc/inittab<< "EOF"
::sysinit:/etc/rc.d/startup

tty1::respawn:/sbin/getty 38400 tty1
tty2::respawn:/sbin/getty 38400 tty2
tty3::respawn:/sbin/getty 38400 tty3
tty4::respawn:/sbin/getty 38400 tty4
tty5::respawn:/sbin/getty 38400 tty5
tty6::respawn:/sbin/getty 38400 tty6

::shutdown:/etc/rc.d/shutdown
::ctrlaltdel:/sbin/reboot
EOF

cat > ${LJOS}/etc/mdev.conf<< "EOF"
# Devices:
# Syntax: %s %d:%d %s
# devices user:group mode

# null does already exist; therefore ownership has to
# be changed with command
null    root:root 0666  @chmod 666 $MDEV
zero    root:root 0666
grsec   root:root 0660
full    root:root 0666

random  root:root 0666
urandom root:root 0444
hwrandom root:root 0660

# console does already exist; therefore ownership has to
# be changed with command
console root:tty 0600 @mkdir -pm 755 fd && cd fd && for x
 â†ªin 0 1 2 3 ; do ln -sf /proc/self/fd/$x $x; done

kmem    root:root 0640
mem     root:root 0640
port    root:root 0640
ptmx    root:tty 0666

# ram.*
ram([0-9]*)     root:disk 0660 >rd/%1
loop([0-9]+)    root:disk 0660 >loop/%1
sd[a-z].*       root:disk 0660 */lib/mdev/usbdisk_link
hd[a-z][0-9]*   root:disk 0660 */lib/mdev/ide_links

tty             root:tty 0666
tty[0-9]        root:root 0600
tty[0-9][0-9]   root:tty 0660
ttyO[0-9]*      root:tty 0660
pty.*           root:tty 0660
vcs[0-9]*       root:tty 0660
vcsa[0-9]*      root:tty 0660

ttyLTM[0-9]     root:dialout 0660 @ln -sf $MDEV modem
ttySHSF[0-9]    root:dialout 0660 @ln -sf $MDEV modem
slamr           root:dialout 0660 @ln -sf $MDEV slamr0
slusb           root:dialout 0660 @ln -sf $MDEV slusb0
fuse            root:root  0666

# misc stuff
agpgart         root:root 0660  >misc/
psaux           root:root 0660  >misc/
rtc             root:root 0664  >misc/

# input stuff
event[0-9]+     root:root 0640 =input/
ts[0-9]         root:root 0600 =input/

# v4l stuff
vbi[0-9]        root:video 0660 >v4l/
video[0-9]      root:video 0660 >v4l/

# load drivers for usb devices
usbdev[0-9].[0-9]       root:root 0660 */lib/mdev/usbdev
usbdev[0-9].[0-9]_.*    root:root 0660
EOF

//VVI ==> create a grub folder in /boot
mkdir -pv ${LJOS}/{bin,boot/{,grub},dev,{etc/,}opt,home,lib/{firmware,modules},lib64,mnt}
///////////////////////////////////////////////////////////////
cat > ${LJOS}/boot/grub/grub.cfg<< "EOF"

set default=0
set timeout=5

set root=(hd0,1)

menuentry "Linux Journal OS 0.1a" {
        linux   /boot/vmlinuz-4.16.3 root=/dev/sda1 ro quiet
}
EOF

touch ${LJOS}/var/run/utmp ${LJOS}/var/log/{btmp,lastlog,wtmp}
chmod -v 664 ${LJOS}/var/run/utmp ${LJOS}/var/log/lastlog

unset CFLAGS
unset CXXFLAGS

///////////////// Cross-Compile /////////////////
export LJOS_HOST=$(echo ${MACHTYPE} | sed "s/-[^-]*/-cross/")
export LJOS_TARGET=riscv64-unknown-linux-gnu
export LJOS_CPU=rv64gv_zicsr_zifencei
export LJOS_ARCH=riscv
export LJOS_ENDIAN=little
/////////////////////////////////////////////////
==> install make --> 
yum install make
dnf install make //Standard package installer
////// copy dependency of make into newroot //////////
$ ldd $(which make)
reply:-	linux-vdso.so.1 (0x00007ffc1df0f000)
	libguile-2.2.so.1 => /lib64/libguile-2.2.so.1 (0x00007fcf30790000)
	libc.so.6 => /lib64/libc.so.6 (0x00007fcf305ae000)
	libgc.so.1 => /lib64/libgc.so.1 (0x00007fcf3046c000)
	libffi.so.8 => /lib64/libffi.so.8 (0x00007fcf3045c000)
	libunistring.so.5 => /lib64/libunistring.so.5 (0x00007fcf302ac000)
	libgmp.so.10 => /lib64/libgmp.so.10 (0x00007fcf30207000)
	libltdl.so.7 => /lib64/libltdl.so.7 (0x00007fcf301fa000)
	libcrypt.so.2 => /lib64/libcrypt.so.2 (0x00007fcf301c1000)
	libm.so.6 => /lib64/libm.so.6 (0x00007fcf300e0000)
	/lib64/ld-linux-x86-64.so.2 (0x00007fcf30928000)
	libgcc_s.so.1 => /lib64/libgcc_s.so.1 (0x00007fcf300bc000)

$ cd newroot
/newroot# sudo cp /lib64/libc.so.6 ./lib64/
/newroot# sudo cp /lib64/libgc.so.1 ./lib64/
/newroot# sudo cp /lib64/libffi.so.8 ./lib64/

//////////////////
make mrproper
